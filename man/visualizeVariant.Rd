% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualizeVariant.R
\name{visualizeVariant}
\alias{visualizeVariant}
\title{Visualizes EVE score for a protein variant.}
\usage{
visualizeVariant(eveInfo, geneName = "X")
}
\arguments{
\item{eveInfo}{Tibble with EVE scores for each residue
position that has a score calculated by EVE, residue position, wildtype amino
acid, and mutated amino acid.  If there are NaNs it means the variant
provided doesn't have an EVE score.}

\item{geneName}{String that is the name of the gene.  If not supplied the
default is X.}
}
\value{
A lollipop graph showing the EVE score at each residue position.
}
\description{
A function that visualizes EVE scores of a variant at residue positions where
EVE scores are possible.
}
\examples{
# Examples:
# First process the EVE data and variant data.
EvePath <- system.file("extdata", "NRX1B_HUMAN_SUBSET.vcf", package = "variantMapper")
EveData <- processEveData(EvePath)
EveData

# If the data is in protein form.
varDataProtPath <- system.file("extdata", "variant_data_protein.csv", package = "variantMapper")
varDataProt <- processVariantData(varDataProtPath, protein = TRUE)
varDataProt

eveScoresProt <- getEveScores(EveData, varDataProt, protein = TRUE)
eveScoresProt

variantPlotProt <- visualizeVariant(eveScoresProt)
variantPlotProt

# If the data is in genomic form.
varDataGenPath <- system.file("extdata", "variant_data_genomic.csv", package = "variantMapper")
varDataGen <- processVariantData(varDataGenPath, protein = FALSE)
varDataGen

eveScoresGen <- getEveScores(EveData, varDataGen, protein = FALSE)
eveScoresGen

variantPlotGen <- visualizeVariant(eveScoresGen, "NRXN1")
variantPlotGen

}

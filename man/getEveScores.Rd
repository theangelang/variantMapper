% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getEveScores.R
\name{getEveScores}
\alias{getEveScores}
\title{Gets the EVE score for the amino acids in variant of interest}
\usage{
getEveScores(eveData, variantData, protein = TRUE)
}
\arguments{
\item{eveData}{A tibble containing the EVE data that has already been
processed by the processEveData function.}

\item{variantData}{A tibble containing the variant data that has already
been processed by the processVariantData function.  Assumption is that there
will only be one variant at each residue/genomic position and the wildtype
and variant amino acid are distinct from one another.  For protein data it
will be missense variants only and genomic data single nucleotide variants
only.  The assumption is that variants are independent of each other.}

\item{protein}{A logical value specifying whether the variant data is in
protein or genomic form.  By default it is set to TRUE meaning the default is
protein form.  If it is set to FALSE it means the variant data is in genomic
form.}
}
\value{
A tibble containing the EVE scores for each residue
position that has a score calculated by EVE, the residue position, wildtype
amino acid, and mutated amino acid.  If there are NaNs it means the variant
provided doesn't have an EVE score.
}
\description{
A function that takes in EVE and variant data then will get the EVE score for
each amino acid in the variant of interest.
}
\details{
This function annotates the variant data by assigning an EVE score to each
amino acid in the variant of interest.  Prior to using this function use the
'processEveData' function and the 'processVariantData' function to properly
process the EVE and variant data respectively.

EVE (Evolutionary model of Variant Effect) is an unsupervised machine
learning model shown to be accurate in predicting pathogenicity of missense
variants.  It uses multiple sequence alignments and doesn't rely on knowledge
of protein function to do so.  More about EVE can be found here
(https://evemodel.org/).

The EVE score assigned is continuous on the interval zero to one.  An EVE
score of zero indicates benign while an EVE score of one is most pathogenic.
}
\examples{
# Example:
# First process the EVE data and variant data.
EvePath <- system.file("extdata", "NRX1B_HUMAN_SUBSET.vcf", package = "variantMapper")
EveData <- processEveData(EvePath)
EveData

# If the data is in protein form.
varDataProtPath <- system.file("extdata", "variant_data_protein.csv", package = "variantMapper")
varDataProt <- processVariantData(varDataProtPath, protein = TRUE)
varDataProt

eveScores <- getEveScores(EveData, varDataProt, protein = TRUE)
eveScores

# If the data is in genomic form.
varDataGenPath <- system.file("extdata", "variant_data_genomic.csv", package = "variantMapper")
varDataGen <- processVariantData(varDataGenPath, protein = FALSE)
varDataGen

eveScores <- getEveScores(EveData, varDataGen, protein = FALSE)
eveScores

}
\references{
1. R Core Team (2022). R: A language and environment for statistical
computing. R Foundation for Statistical Computing, Vienna, Austria.
URL https://www.R-project.org/.

2. Wickham H, François R, Henry L, Müller K (2022). \emph{dplyr: A Grammar of
Data Manipulation}. R package version 1.0.10,
https://CRAN.R-project.org/package=dplyr.

3. Müller K, Wickham H (2022). \emph{tibble: Simple Data Frames}. R package
version 3.1.8, https://CRAN.R-project.org/package=tibble.

4. Frazer, J. et al. (2021). Disease variant prediction with deep generative
models of evolutionary data. \emph{Nature. 599}. 91-95.
}

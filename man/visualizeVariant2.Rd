% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualizeVariant.R
\name{visualizeVariant2}
\alias{visualizeVariant2}
\title{Visualize EVE scores of two variants for one gene simultaneously}
\usage{
visualizeVariant2(eveInfo1, eveInfo2, geneName = "X", aboveZeroOnly = FALSE)
}
\arguments{
\item{eveInfo1}{Tibble for the first variant with EVE scores for each residue
position that has a score calculated by EVE, residue position, wildtype amino
acid, and mutated amino acid.  If there are NaNs it means the variant
provided doesn't have an EVE score for that particular mutation at that
position.  These NaN values will be replaced by 0.}

\item{eveInfo2}{Tibble for the second variant with EVE scores for each
residue position that has a score calculated by EVE, residue position,
wildtype amino acid, and mutated amino acid.  If there are NaNs it means the
variant provided doesn't have an EVE score for that particular mutation at
that position.  These NaN values will be replaced by 0.}

\item{geneName}{A character vector that is the name of the gene.  If not
supplied the default is X.}

\item{aboveZeroOnly}{Logical value that indicates whether to include EVE scores
of 0.  The default is FALSE so EVE scores of 0 will be included.  Note if
there are NaN values they will be excluded as well since they will be changed
to 0 first.}
}
\value{
A lollipop graph showing the EVE score at each residue position for
both variants.
}
\description{
A function that visualizes EVE scores for two variants of the same gene
simultaneously.  Function will replace EVE scores of NaN values with 0.
}
\details{
Prior to using this function ensure the 'processEveData', 'processVariantData',
and 'getEveScores' functions have been used in this order to properly process
and assign EVE scores to the variant of interest.  For each variant ensure
you have used 'processVariantData' and 'getEveScores'.  In total there should
have been one call to 'processEveData', two calls to 'processVariantData'
(one per variant), and two calls to 'getEveScore' (one per variant).

EVE (Evolutionary model of Variant Effect) is an unsupervised machine
learning model shown to be accurate in predicting pathogenicity of missense
variants.  It uses multiple sequence alignments and doesn't rely on knowledge
of protein function to do so.  More about EVE can be found here
(https://evemodel.org/).

The EVE score assigned is continuous on the interval zero to one.  An EVE
score of zero indicates benign while an EVE score of one is most pathogenic.
}
\examples{
# Examples:
# First process the EVE data and variant data.
EvePath <- system.file("extdata", "NRX1B_HUMAN_SUBSET.vcf", package = "variantMapper")
EveData <- processEveData(EvePath)
EveData

# If the data is in protein form.
varDataProtPath <- system.file("extdata", "variant_data_protein.csv", package = "variantMapper")
varDataProt <- processVariantData(varDataProtPath, protein = TRUE)
varDataProt

eveScoresProt <- getEveScores(EveData, varDataProt, protein = TRUE)
eveScoresProt

# If the data is in genomic form.
varDataGenPath <- system.file("extdata", "variant_data_genomic.csv", package = "variantMapper")
varDataGen <- processVariantData(varDataGenPath, protein = FALSE)
varDataGen

eveScoresGen <- getEveScores(EveData, varDataGen, protein = FALSE)
eveScoresGen

compareVariantsPlot <- visualizeVariant2(eveScoresProt, eveScoresGen, "NRXN1")
compareVariantsPlot

compareVariantsPlotAboveZero <- visualizeVariant2(eveScoresProt,
eveScoresGen, "NRXN1", aboveZeroOnly = TRUE)
compareVariantsPlotAboveZero

}
\references{
1. R Core Team (2022). R: A language and environment for statistical
computing. R Foundation for Statistical Computing, Vienna, Austria.
URL https://www.R-project.org/.

2. H. Wickham. ggplot2: Elegant Graphics for Data Analysis. Springer-Verlag
New York, 2016.

3. Wickham H, François R, Henry L, Müller K (2022). \emph{dplyr: A Grammar of
Data Manipulation}. R package version 1.0.10,
https://CRAN.R-project.org/package=dplyr.

4. Holtz, Y. Lollipop plot. (2018) https://r-graph-gallery.com/lollipop-plot.

5. Frazer, J. et al. (2021). Disease variant prediction with deep generative
models of evolutionary data. \emph{Nature. 599}. 91-95.
}
